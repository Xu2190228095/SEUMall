<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UserDao">
    <select id="findAll" parameterType="User" resultType="User">
        select * from user
        <trim prefix="where" prefixOverrides="and | or">
            <if test="uid != null">
                AND uid = #{uid}
            </if>
            <if test="username != null">
                AND username = #{username}
            </if>
            <if test="password != null">
                AND password = #{password}
            </if>
        </trim>
    </select>

    <select id="findByUsername" parameterType="String" resultType="User">
        select * from user where username = #{username}
    </select>

    <insert id="insert" parameterType="User">
        insert into user(username,password,createtime,lastlogintime,email,`character`,account,isActive)
        values(#{username},#{password},#{createTime},#{lastLoginTime},#{email},#{character},#{account},#{isActive})
    </insert>

    <delete id="delete" parameterType="User">
        delete from user where uid = #{uid}
    </delete>

    <update id="update" parameterType="User">
        update user
        <trim prefix="set" suffixOverrides=",">
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="createTime != null">
                createtime = #{createtime},
            </if>
            <if test="lastLoginTime != null">
                lastlogintime = #{lastLoginTime},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="character != null">
                `character` = #{character},
            </if>
            <if test="account != null">
                account = #{account},
            </if>
            <if test="isActive != null">
                isActive = #{isActive},
            </if>
            <if test="token != null">
                token = #{token},
            </if>
        </trim>
            where username = #{username}
    </update>
    <select id="fetchList" parameterType="java.util.Map" resultType="User">
        select * from user
        <trim prefix="where">
            <if test="userInfo.username != null">
                username like concat('%',#{userInfo.username},'%')
            </if>
        </trim>
        order by user.uid
        limit #{size} offset #{start}
    </select>
    <select id="searchTotal" parameterType="User" resultType="int">
        select count(*) from user
        <trim prefix="where">
            <if test="username != null">
                username like concat('%',#{username},'%')
            </if>
        </trim>
    </select>
</mapper>
